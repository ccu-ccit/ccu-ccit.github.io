{"remainingRequest":"/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/node_modules/thread-loader/dist/cjs.js!/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/node_modules/babel-loader/lib/index.js!/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/node_modules/eslint-loader/index.js??ref--13-0!/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/src/utils/request.js","dependencies":[{"path":"/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/src/utils/request.js","mtime":1608274836358},{"path":"/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IFZ1ZUF4aW9zIH0gZnJvbSAnLi9heGlvcyc7CnZhciBzZXJ2aWNlID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiAiaHR0cDovL2NjaXQuaGVyb2t1YXBwLmNvbSIsCiAgdGltZW91dDogMzAwMDAsCiAgd2l0aENyZWRlbnRpYWxzOiBmYWxzZQp9KTsKCnZhciBlcnIgPSBmdW5jdGlvbiBlcnIoZXJyb3IpIHsKICB2YXIgb3JpZ2luYWxSZXF1ZXN0ID0gZXJyb3IuY29uZmlnOwoKICBpZiAoZXJyb3IucmVzcG9uc2UpIHsKICAgIGNvbnNvbGUubG9nKCdjYXRjaCB0aGUgZXJyb3InKTsKICAgIGNvbnNvbGUubG9nKG9yaWdpbmFsUmVxdWVzdC51cmwpOwoKICAgIGlmIChlcnJvci5yZXNwb25zZS5zdGF0dXMgIT09IDQwMSkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfQoKICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7CiAgfQoKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9OyAvLyByZXF1ZXN0IGludGVyY2VwdG9yCgoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIHJldHVybiBjb25maWc7Cn0sIGVycik7IC8vIHJlc3BvbnNlIGludGVyY2VwdG9yCgpzZXJ2aWNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7Cn0sIGVycik7CnZhciBpbnN0YWxsZXIgPSB7CiAgdm06IHt9LAogIGluc3RhbGw6IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7CiAgICBWdWUudXNlKFZ1ZUF4aW9zLCBzZXJ2aWNlKTsKICB9Cn07CmV4cG9ydCB7IGluc3RhbGxlciBhcyBWdWVBeGlvcywgc2VydmljZSBhcyBheGlvcyB9Ow=="},{"version":3,"sources":["/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/src/utils/request.js"],"names":["axios","VueAxios","service","create","baseURL","timeout","withCredentials","err","error","originalRequest","config","response","console","log","url","status","Promise","resolve","reject","interceptors","request","use","data","installer","vm","install","Vue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE,2BADmB;AAEzBC,EAAAA,OAAO,EAAE,KAFgB;AAG5BC,EAAAA,eAAe,EAAE;AAHW,CAAb,CAAhB;;AAMA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrB,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAA9B;;AACA,MAAIF,KAAK,CAACG,QAAV,EAAoB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAe,CAACK,GAA5B;;AACA,QAAIN,KAAK,CAACG,QAAN,CAAeI,MAAf,KAA0B,GAA9B,EAAmC;AAClC,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCA,QAAAA,MAAM,CAACV,KAAD,CAAN;AACA,OAFM,CAAP;AAGA;;AACD,WAAOQ,OAAO,CAACE,MAAR,CAAeV,KAAf,CAAP;AACE;;AACD,SAAOQ,OAAO,CAACE,MAAR,CAAeV,KAAf,CAAP;AACD,CAbD,C,CAeA;;;AACAN,OAAO,CAACiB,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAAX,MAAM,EAAI;AACzC,SAAOA,MAAP;AACD,CAFD,EAEGH,GAFH,E,CAIA;;AACAL,OAAO,CAACiB,YAAR,CAAqBR,QAArB,CAA8BU,GAA9B,CAAkC,UAACV,QAAD,EAAc;AAC9C,SAAOA,QAAQ,CAACW,IAAhB;AACD,CAFD,EAEGf,GAFH;AAIA,IAAMgB,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE,EADY;AAEhBC,EAAAA,OAFgB,mBAEPC,GAFO,EAEF;AACZA,IAAAA,GAAG,CAACL,GAAJ,CAAQpB,QAAR,EAAkBC,OAAlB;AACD;AAJe,CAAlB;AAOA,SACEqB,SAAS,IAAItB,QADf,EAEEC,OAAO,IAAIF,KAFb","sourcesContent":["import axios from 'axios'\nimport { VueAxios } from './axios'\nconst service = axios.create({\n\tbaseURL: \"http://ccit.herokuapp.com\",\n    timeout: 30000,\n\twithCredentials: false\n})\n\nconst err = (error) => {\n  const originalRequest = error.config\n  if (error.response) {\n\tconsole.log('catch the error')\n\tconsole.log(originalRequest.url)\n\tif (error.response.status !== 401) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treject(error)\n\t\t})\n\t}\n\treturn Promise.reject(error)\n  }\n  return Promise.reject(error)\n}\n\n// request interceptor\nservice.interceptors.request.use(config => {\n  return config\n}, err)\n\n// response interceptor\nservice.interceptors.response.use((response) => {\n  return response.data\n}, err)\n\nconst installer = {\n  vm: {},\n  install (Vue) {\n    Vue.use(VueAxios, service)\n  }\n}\n\nexport {\n  installer as VueAxios,\n  service as axios\n}\n"]}]}