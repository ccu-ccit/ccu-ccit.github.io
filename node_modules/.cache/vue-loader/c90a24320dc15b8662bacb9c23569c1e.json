{"remainingRequest":"/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/src/components/teacher/SelectQuestion.vue?vue&type=style&index=0&id=513e64ab&lang=scss&scoped=true&","dependencies":[{"path":"/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/src/components/teacher/SelectQuestion.vue","mtime":1610174192206},{"path":"/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/ccu-ccit.github.io/ccu-ccit.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYWN0aW9uIHsKICB3aWR0aDogMTAwJTsKICB0ZXh0LWFsaWduOiByaWdodDsKICBtYXJnaW4tdG9wOiAxMHB4Owp9Cg=="},{"version":3,"sources":["SelectQuestion.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA","file":"SelectQuestion.vue","sourceRoot":"src/components/teacher","sourcesContent":["<template>\n  <div>\n    <a-table\n      :pagination=\"false\"\n      :columns=\"columns\"\n      :data-source=\"activity.questions\"\n      :row-selection=\"{\n        selectedRowKeys: selectedRowKeys,\n        onChange: onSelectChange,\n      }\"\n    />\n    <div class=\"action\">\n      <a-button\n        :disabled=\"!hasSelected\"\n        size=\"small\"\n        type=\"primary\"\n        @click=\"start()\"\n        >開始</a-button\n      >\n    </div>\n  </div>\n</template>\n<script>\nimport { createNamespacedHelpers } from \"vuex\";\nconst columns = [\n  {\n    title: \"題目\",\n    dataIndex: \"question\",\n    key: \"question\",\n  },\n];\nconst { mapActions: teacherActions } = createNamespacedHelpers(\"teacher\");\n\nexport default {\n  name: \"selectQuestion\",\n  props: {\n    activity: {\n      type: Object,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      columns,\n      selectedRowKeys: [],\n    };\n  },\n  computed: {\n    hasSelected() {\n      return this.selectedRowKeys.length > 0;\n    },\n  },\n  methods: {\n    ...teacherActions([\"setInProgressActivity\"]),\n    start() {\n      this.activity.online = true;\n      this.activity.questions.map((question) => {\n        if (this.selectedRowKeys.includes(question.serial)) {\n          question.visible = true;\n        } else {\n          question.visible = false;\n        }\n      });\n      this.setInProgressActivity(this.activity);\n      this.$router.push({ name: \"activity-code\" });\n    },\n    onSelectChange(selectedRowKeys) {\n      console.log(\"selectedRowKeys changed: \", selectedRowKeys);\n      this.selectedRowKeys = selectedRowKeys;\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.action {\n  width: 100%;\n  text-align: right;\n  margin-top: 10px;\n}\n</style>\n"]}]}